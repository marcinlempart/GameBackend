trigger:
  branches:
    include:
      - main

variables:
  solution: "GameBackend/**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  azureSubscription: "GameBackendServiceConnection"
  artifactName: "drop"
  terraformWorkingDir: "Terraform"
  packagePath: "$(System.ArtifactsDirectory)/$(artifactName)/**/*.zip"

stages:
  # ===================================
  # 1️⃣ BUILD & TEST .NET APLIKACJI (Windows)
  # ===================================
  - stage: Build
    displayName: "Build and Test Application"
    jobs:
      - job: BuildApp
        displayName: "Build .NET App"
        pool:
          vmImage: "windows-latest"
        steps:
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: $(solution)

          - task: VSBuild@1
            inputs:
              solution: $(solution)
              msbuildArgs: >
                /p:DeployOnBuild=true
                /p:WebPublishMethod=Package
                /p:PackageAsSingleFile=true
                /p:SkipInvalidConfigurations=true
                /p:PackageLocation="$(build.artifactStagingDirectory)"
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)

          - task: VSTest@2
            inputs:
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: $(build.artifactStagingDirectory)
              ArtifactName: $(artifactName)

  # ===================================
  # 2️⃣ PROVISION INFRA Z TERRAFORM (Linux)
  # ===================================
  - stage: Infrastructure
    displayName: "Provision Infrastructure with Terraform"
    dependsOn: Build
    jobs:
      - job: TerraformApply
        displayName: "Terraform Apply"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - script: |
              echo "Installing Terraform..."
              sudo apt-get update && sudo apt-get install -y unzip wget
              wget https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip
              unzip terraform_1.7.5_linux_amd64.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: "Install Terraform"

          - task: AzureCLI@2
            displayName: "Terraform Init & Apply"
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformWorkingDir)
              inlineScript: |
                echo "Initializing Terraform..."
                terraform init

                echo "Importing existing resource group if exists..."
                terraform import azurerm_resource_group.rg /subscriptions/171eb711-b76d-49e7-a653-d91675596edb/resourceGroups/rg-game-backend || echo "Import failed or already exists"

                echo "Planning Terraform..."
                terraform plan -out=tfplan

                echo "Applying Terraform..."
                terraform apply -auto-approve tfplan

  # ===================================
  # 3️⃣ DEPLOY DO AZURE APP SERVICE (Linux)
  # ===================================
  - stage: Deploy
    displayName: "Deploy Application to Azure App Service"
    dependsOn: Infrastructure
    jobs:
      - job: DeployWebApp
        displayName: "Deploy Web App"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: current
              downloadType: single
              artifactName: $(artifactName)
              downloadPath: $(System.ArtifactsDirectory)

          - task: AzureRmWebAppDeployment@4
            displayName: "Deploy App to Azure App Service"
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webApp
              WebAppName: "game-backend-app"
              Package: $(packagePath)

          - task: AzureCLI@2
            displayName: "Verify Deployment"
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Verifying deployment..."
                APP_URL=$(az webapp show --name "game-backend-app" --resource-group "rg-game-backend" --query defaultHostName --output tsv)
                echo "Application URL: https://$APP_URL"
